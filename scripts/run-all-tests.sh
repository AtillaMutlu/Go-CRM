#!/bin/bash

# Renkli output i√ßin
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß™ GO MIKROSERVIS TEST S√úƒ∞Tƒ∞ BA≈ûLATILIYOR...${NC}\n"

# Test sonu√ßlarƒ±
INFRASTRUCTURE_SUCCESS=false
UNIT_SUCCESS=false
INTEGRATION_SUCCESS=false
E2E_SUCCESS=false

# 1. Infrastructure Test
echo -e "${YELLOW}üìã 1. INFRASTRUCTURE TEST${NC}"
echo "----------------------------------------"
if bash scripts/test-infrastructure.sh; then
    echo -e "${GREEN}‚úÖ Infrastructure test BA≈ûARILI${NC}\n"
    INFRASTRUCTURE_SUCCESS=true
else
    echo -e "${RED}‚ùå Infrastructure test BA≈ûARISIZ${NC}\n"
fi

# 2. Unit Tests
echo -e "${YELLOW}üìã 2. UNIT TESTS${NC}"
echo "----------------------------------------"
if go test -v ./tests/unit/...; then
    echo -e "${GREEN}‚úÖ Unit tests BA≈ûARILI${NC}\n"
    UNIT_SUCCESS=true
else
    echo -e "${RED}‚ùå Unit tests BA≈ûARISIZ${NC}\n"
fi

# 3. Integration Tests (sadece infrastructure ba≈üarƒ±lƒ±ysa)
if [ "$INFRASTRUCTURE_SUCCESS" = true ]; then
    echo -e "${YELLOW}üìã 3. INTEGRATION TESTS${NC}"
    echo "----------------------------------------"
    # Test database i√ßin environment variable set et
    export TEST_DB_URL="postgres://user:pass@localhost:5432/users?sslmode=disable"
    
    if go test -v ./tests/integration/...; then
        echo -e "${GREEN}‚úÖ Integration tests BA≈ûARILI${NC}\n"
        INTEGRATION_SUCCESS=true
    else
        echo -e "${RED}‚ùå Integration tests BA≈ûARISIZ${NC}\n"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  Integration tests ATLANDI (Infrastructure ba≈üarƒ±sƒ±z)${NC}\n"
fi

# 4. E2E Tests (sadece √∂nceki testler ba≈üarƒ±lƒ±ysa)
if [ "$INFRASTRUCTURE_SUCCESS" = true ] && [ "$INTEGRATION_SUCCESS" = true ]; then
    echo -e "${YELLOW}üìã 4. E2E TESTS${NC}"
    echo "----------------------------------------"
    echo "E2E testleri i√ßin API servisini ba≈ülatƒ±yoruz..."
    
    # API servisini background'da ba≈ülat
    go run cmd/api/main.go &
    API_PID=$!
    sleep 5
    
    # Gateway servisini background'da ba≈ülat (eƒüer gerekirse)
    # go run cmd/gateway/main.go &
    # GATEWAY_PID=$!
    # sleep 3
    
    if go test -v ./tests/e2e/...; then
        echo -e "${GREEN}‚úÖ E2E tests BA≈ûARILI${NC}\n"
        E2E_SUCCESS=true
    else
        echo -e "${RED}‚ùå E2E tests BA≈ûARISIZ${NC}\n"
    fi
    
    # API servisini durdur
    kill $API_PID 2>/dev/null
    # kill $GATEWAY_PID 2>/dev/null
    
else
    echo -e "${YELLOW}‚ö†Ô∏è  E2E tests ATLANDI (√ñnceki testler ba≈üarƒ±sƒ±z)${NC}\n"
fi

# 5. Performance Tests (opsiyonel)
echo -e "${YELLOW}üìã 5. PERFORMANCE TESTS (Opsiyonel)${NC}"
echo "----------------------------------------"
if [ "$E2E_SUCCESS" = true ]; then
    echo "Performance testleri i√ßin API servisini yeniden ba≈ülatƒ±yoruz..."
    go run cmd/api/main.go &
    API_PID=$!
    sleep 3
    
    # Basic performance test
    echo "10 concurrent request testi..."
    for i in {1..10}; do
        curl -s -o /dev/null -w "%{http_code}" "http://localhost:8085/api/login" \
            -H "Content-Type: application/json" \
            -d '{"email":"demo@example.com","password":"demo123"}' &
    done
    wait
    
    kill $API_PID 2>/dev/null
    echo -e "${GREEN}‚úÖ Performance test tamamlandƒ±${NC}\n"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Performance tests ATLANDI${NC}\n"
fi

# 6. Benchmark Tests
echo -e "${YELLOW}üìã 6. BENCHMARK TESTS${NC}"
echo "----------------------------------------"
if go test -bench=. -benchmem ./tests/unit/...; then
    echo -e "${GREEN}‚úÖ Benchmark tests tamamlandƒ±${NC}\n"
else
    echo -e "${RED}‚ùå Benchmark tests ba≈üarƒ±sƒ±z${NC}\n"
fi

# Test √ñzeti
echo -e "${BLUE}üìä TEST √ñZETƒ∞${NC}"
echo "========================================"
echo -e "Infrastructure Tests: $([ "$INFRASTRUCTURE_SUCCESS" = true ] && echo -e "${GREEN}BA≈ûARILI${NC}" || echo -e "${RED}BA≈ûARISIZ${NC}")"
echo -e "Unit Tests:          $([ "$UNIT_SUCCESS" = true ] && echo -e "${GREEN}BA≈ûARILI${NC}" || echo -e "${RED}BA≈ûARISIZ${NC}")"
echo -e "Integration Tests:   $([ "$INTEGRATION_SUCCESS" = true ] && echo -e "${GREEN}BA≈ûARILI${NC}" || echo -e "${RED}BA≈ûARISIZ${NC}")"
echo -e "E2E Tests:           $([ "$E2E_SUCCESS" = true ] && echo -e "${GREEN}BA≈ûARILI${NC}" || echo -e "${RED}BA≈ûARISIZ${NC}")"

# Exit code
if [ "$INFRASTRUCTURE_SUCCESS" = true ] && [ "$UNIT_SUCCESS" = true ] && [ "$INTEGRATION_SUCCESS" = true ] && [ "$E2E_SUCCESS" = true ]; then
    echo -e "\n${GREEN}üéâ T√úM TESTLER BA≈ûARILI!${NC}"
    exit 0
else
    echo -e "\n${RED}üí• BAZI TESTLER BA≈ûARISIZ!${NC}"
    exit 1
fi 